<?php

namespace common\forms;

use yii\base\Model;
use Yii;
use yii\helpers\VarDumper;

/*
 * This class will send by email the inventory report of an existence.
 * */
class EmailMessageForm extends Model{


    public $email;
    public $title;
    public $content;
    public $attachment = [];


    public function beforeValidate()
    {
        //use always the developer email as destination on development environments
        if (!Yii::$app->params['production_server']){

            $this->email = Yii::$app->params['adminEmail'];
        }

        if(!is_array($this->email)){

            $this->email = explode(',',$this->email);
        }

        return parent::beforeValidate(); // TODO: Change the autogenerated stub
    }

    /**
     * @inheritdoc
     */
    public function rules()
    {
        return [
            // name, email, subject and body are required
            [['email','title','content'], 'required'],
            // email has to be a valid email address
            ['email', 'each', 'rule' => ['email']],
            [['attachment'],'safe']
        ];
    }


    public function send()
    {

        if($this->validate() && !empty($this->email)){

            foreach($this->email as $email){

                $emailMessage = Yii::$app->mailer->compose();

                $emailMessage->setTo($email)
                    ->setFrom([Yii::$app->params['adminEmail'] => Yii::$app->name])
                    ->setSubject($this->title);


                if(is_array($this->attachment)){

                    foreach($this->attachment as $attachment){

                        if(is_array($attachment)){

                            if(array_key_exists('content', $attachment) && array_key_exists('fileName', $attachment) && array_key_exists('contentType', $attachment)){

                                $emailMessage->attachContent($attachment['content'], ['fileName' => $attachment['fileName'], $attachment['contentType']]);
                            }
                        }

                    }
                }

                $emailMessage->setHtmlBody($this->content);

                $emailMessage->send();
            }

        }

    }

}